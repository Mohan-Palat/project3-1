{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/grahamsquires/sei/projects/project3/project3/src/context/Articles/ArticlesState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ArticlesContext from \"./ArticlesContext\";\nimport ArticlesReducer from \"./ArticlesReducer\";\nimport { GET_NEWS_ARTICLES, ARTICLES_ERROR, GET_RESEARCH_ARTICLES } from \"../types\";\n\nconst ArticlesState = props => {\n  _s();\n\n  const initialState = {\n    newsArticles: null,\n    researchArticles: null,\n    error: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(ArticlesReducer, initialState); // Get Articles\n\n  const getNewsArticles = async query => {\n    const url = `https://gnews.io/api/v4/search?q=${query}&lang=en&token=${process.env.REACT_APP_NEWS_API_KEY}`;\n\n    try {\n      const res = await axios.get(url);\n      dispatch({\n        type: GET_NEWS_ARTICLES,\n        payload: res.data.articles\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLES_ERROR\n      });\n    }\n  };\n\n  const getResearchArticles = async query => {\n    const url = `https://core.ac.uk:443/api-v2/articles/search/${query}?page=1&pageSize=10&metadata=true&fulltext=true&citations=false&similar=false&duplicate=false&urls=false&faithfulMetadata=false&apiKey=${process.env.REACT_APP_RESEARCH_API_KEY}`;\n\n    try {\n      const res = await axios.get(url);\n      dispatch({\n        type: GET_RESEARCH_ARTICLES,\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ARTICLES_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ArticlesContext.Provider, {\n    value: {\n      newsArticles: state.newsArticles,\n      researchArticles: state.researchArticles,\n      getNewsArticles,\n      getResearchArticles\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArticlesState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ArticlesState;\nexport default ArticlesState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesState\");","map":{"version":3,"sources":["/Users/grahamsquires/sei/projects/project3/project3/src/context/Articles/ArticlesState.js"],"names":["React","useReducer","useEffect","axios","ArticlesContext","ArticlesReducer","GET_NEWS_ARTICLES","ARTICLES_ERROR","GET_RESEARCH_ARTICLES","ArticlesState","props","initialState","newsArticles","researchArticles","error","loading","state","dispatch","getNewsArticles","query","url","process","env","REACT_APP_NEWS_API_KEY","res","get","type","payload","data","articles","err","getResearchArticles","REACT_APP_RESEARCH_API_KEY","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SACEC,iBADF,EAEEC,cAFF,EAGEC,qBAHF,QAIO,UAJP;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,YAAY,EAAE,IADK;AAEnBC,IAAAA,gBAAgB,EAAE,IAFC;AAGnBC,IAAAA,KAAK,EAAE,IAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACI,eAAD,EAAkBM,YAAlB,CAApC,CAP+B,CAS/B;;AACA,QAAMO,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvC,UAAMC,GAAG,GAAI,oCAAmCD,KAAM,kBAAiBE,OAAO,CAACC,GAAR,CAAYC,sBAAuB,EAA1G;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAUL,GAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEpB,iBADC;AAEPqB,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEnB;AAAR,OAAD,CAAR;AACD;AACF,GAXD;;AAaA,QAAMwB,mBAAmB,GAAG,MAAOZ,KAAP,IAAiB;AAC3C,UAAMC,GAAG,GAAI,iDAAgDD,KAAM,0IAAyIE,OAAO,CAACC,GAAR,CAAYU,0BAA2B,EAAnP;;AACA,QAAI;AACF,YAAMR,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAUL,GAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAElB,qBADC;AAEPmB,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOE,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEnB;AAAR,OAAD,CAAR;AACD;AACF,GAZD;;AAcA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADf;AAELC,MAAAA,gBAAgB,EAAEG,KAAK,CAACH,gBAFnB;AAGLK,MAAAA,eAHK;AAILa,MAAAA;AAJK,KADT;AAAA,cAQGrB,KAAK,CAACuB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjDD;;GAAMxB,a;;KAAAA,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ArticlesContext from \"./ArticlesContext\";\nimport ArticlesReducer from \"./ArticlesReducer\";\n\nimport {\n  GET_NEWS_ARTICLES,\n  ARTICLES_ERROR,\n  GET_RESEARCH_ARTICLES,\n} from \"../types\";\n\nconst ArticlesState = (props) => {\n  const initialState = {\n    newsArticles: null,\n    researchArticles: null,\n    error: null,\n    loading: true,\n  };\n  const [state, dispatch] = useReducer(ArticlesReducer, initialState);\n\n  // Get Articles\n  const getNewsArticles = async (query) => {\n    const url = `https://gnews.io/api/v4/search?q=${query}&lang=en&token=${process.env.REACT_APP_NEWS_API_KEY}`;\n    try {\n      const res = await axios.get(url);\n      dispatch({\n        type: GET_NEWS_ARTICLES,\n        payload: res.data.articles,\n      });\n    } catch (err) {\n      dispatch({ type: ARTICLES_ERROR });\n    }\n  };\n\n  const getResearchArticles = async (query) => {\n    const url = `https://core.ac.uk:443/api-v2/articles/search/${query}?page=1&pageSize=10&metadata=true&fulltext=true&citations=false&similar=false&duplicate=false&urls=false&faithfulMetadata=false&apiKey=${process.env.REACT_APP_RESEARCH_API_KEY}`;\n    try {\n      const res = await axios.get(url);\n\n      dispatch({\n        type: GET_RESEARCH_ARTICLES,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      dispatch({ type: ARTICLES_ERROR });\n    }\n  };\n\n  return (\n    <ArticlesContext.Provider\n      value={{\n        newsArticles: state.newsArticles,\n        researchArticles: state.researchArticles,\n        getNewsArticles,\n        getResearchArticles,\n      }}\n    >\n      {props.children}\n    </ArticlesContext.Provider>\n  );\n};\n\nexport default ArticlesState;\n"]},"metadata":{},"sourceType":"module"}