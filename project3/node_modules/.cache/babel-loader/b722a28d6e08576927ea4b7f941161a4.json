{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/grahamsquires/sei/projects/project3/project3/src/context/Books/BooksState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport convert, { xml2js } from \"xml-js\";\nimport BooksContext from \"./BooksContext\";\nimport BooksReducer from \"./BooksReducer\";\nimport TitleResults from \"../../TitleResults\";\nimport { BOOKS_ERROR, GET_BOOKS_BY_AUTHOR, GET_BOOKS_BY_TITLE } from \"../types\";\n\nvar parseString = require(\"xml2js\").parseString;\n\nconst BooksState = props => {\n  _s();\n\n  const initialState = {\n    title_search: null,\n    author_search: null,\n    error: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(BooksReducer, initialState); // Get Books\n\n  const getBooksByTitle = async title => {\n    const url = `https://www.goodreads.com/search/index.xml?q=${title}&key=${process.env.REACT_APP_GOODREADS_API_KEY}&search=title`;\n\n    try {\n      const res = await axios.get(url); //   let result = JSON.parse(\n      //     convert.xml2json(res.data, { compact: true, spaces: 4 })\n      //   );\n\n      parseString(res.data, function (err, result) {\n        dispatch({\n          type: GET_BOOKS_BY_TITLE,\n          payload: result.GoodreadsResponse.search[0].results[0].work\n        });\n      }); // console.log(\"result\", result);\n    } catch (err) {\n      dispatch({\n        type: BOOKS_ERROR\n      });\n    }\n  };\n\n  const getBooksByAuthor = async author => {\n    const url = `https://www.goodreads.com/search/index.xml?q=${author}&key=${process.env.REACT_APP_GOODREADS_API_KEY}&search=author`;\n\n    try {\n      const res = await axios.get(url); //   let result = JSON.parse(\n      //     convert.xml2json(res.data, { compact: true, spaces: 4 })\n      //   );\n\n      parseString(res.data, function (err, result) {\n        dispatch({\n          type: GET_BOOKS_BY_AUTHOR,\n          payload: result.GoodreadsResponse.search[0].results[0].work\n        });\n      }); // console.log(\"result\", result);\n    } catch (err) {\n      dispatch({\n        type: BOOKS_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: {\n      title_search: state.title_search,\n      author_search: state.author_search,\n      loading: state.loading,\n      error: state.error,\n      getBooksByTitle,\n      getBooksByAuthor\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BooksState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = BooksState;\nexport default BooksState;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksState\");","map":{"version":3,"sources":["/Users/grahamsquires/sei/projects/project3/project3/src/context/Books/BooksState.js"],"names":["React","useReducer","useEffect","axios","convert","xml2js","BooksContext","BooksReducer","TitleResults","BOOKS_ERROR","GET_BOOKS_BY_AUTHOR","GET_BOOKS_BY_TITLE","parseString","require","BooksState","props","initialState","title_search","author_search","error","loading","state","dispatch","getBooksByTitle","title","url","process","env","REACT_APP_GOODREADS_API_KEY","res","get","data","err","result","type","payload","GoodreadsResponse","search","results","work","getBooksByAuthor","author","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport convert, { xml2js } from \"xml-js\";\nimport BooksContext from \"./BooksContext\";\nimport BooksReducer from \"./BooksReducer\";\nimport TitleResults from \"../../TitleResults\";\nimport { BOOKS_ERROR, GET_BOOKS_BY_AUTHOR, GET_BOOKS_BY_TITLE } from \"../types\";\n\nvar parseString = require(\"xml2js\").parseString;\nconst BooksState = (props) => {\n  const initialState = {\n    title_search: null,\n    author_search: null,\n    error: null,\n    loading: true,\n  };\n  const [state, dispatch] = useReducer(BooksReducer, initialState);\n\n  // Get Books\n  const getBooksByTitle = async (title) => {\n    const url = `https://www.goodreads.com/search/index.xml?q=${title}&key=${process.env.REACT_APP_GOODREADS_API_KEY}&search=title`;\n    try {\n      const res = await axios.get(url);\n      //   let result = JSON.parse(\n      //     convert.xml2json(res.data, { compact: true, spaces: 4 })\n      //   );\n      parseString(res.data, function (err, result) {\n        dispatch({\n          type: GET_BOOKS_BY_TITLE,\n          payload: result.GoodreadsResponse.search[0].results[0].work,\n        });\n      });\n\n      // console.log(\"result\", result);\n    } catch (err) {\n      dispatch({ type: BOOKS_ERROR });\n    }\n  };\n\n  const getBooksByAuthor = async (author) => {\n    const url = `https://www.goodreads.com/search/index.xml?q=${author}&key=${process.env.REACT_APP_GOODREADS_API_KEY}&search=author`;\n    try {\n      const res = await axios.get(url);\n      //   let result = JSON.parse(\n      //     convert.xml2json(res.data, { compact: true, spaces: 4 })\n      //   );\n      parseString(res.data, function (err, result) {\n        dispatch({\n          type: GET_BOOKS_BY_AUTHOR,\n          payload: result.GoodreadsResponse.search[0].results[0].work,\n        });\n      });\n\n      // console.log(\"result\", result);\n    } catch (err) {\n      dispatch({ type: BOOKS_ERROR });\n    }\n  };\n  return (\n    <BooksContext.Provider\n      value={{\n        title_search: state.title_search,\n        author_search: state.author_search,\n        loading: state.loading,\n        error: state.error,\n        getBooksByTitle,\n        getBooksByAuthor,\n      }}\n    >\n      {props.children}\n    </BooksContext.Provider>\n  );\n};\n\nexport default BooksState;\n"]},"metadata":{},"sourceType":"module"}