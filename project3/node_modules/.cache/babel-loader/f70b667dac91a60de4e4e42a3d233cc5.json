{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/grahamsquires/sei/projects/project3/project3/src/TitleResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useContext, useEffect } from \"react\";\nimport BooksContext from \"./context/Books/BooksContext\";\nimport ArticlesContext from \"./context/Articles/ArticlesContext\";\nexport const TitleResults = () => {\n  _s();\n\n  const booksContext = useContext(BooksContext);\n  const articlesContext = useContext(ArticlesContext);\n  const {\n    title_search,\n    getBooksByTitle,\n    getBooksByAuthor,\n    author_search\n  } = booksContext;\n  const {\n    getResearchArticles,\n    newsArticles,\n    getNewsArticles,\n    researchArticles\n  } = articlesContext;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Search Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), title_search ? title_search.map(item => {\n      console.log(item.best_book);\n      return (\n        /*#__PURE__*/\n        //TODO: Should we default to one radio button checked or make an error for if user runs search without a radio button checked?\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", item.best_book[0].title, \"Author: \", item.best_book[0].author[0].name, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.best_book[0].image_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      );\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TitleResults, \"FRY3Wx0StA8xbPl+RjXf9JVWO/0=\");\n\n_c = TitleResults;\nexport default TitleResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TitleResults\");","map":{"version":3,"sources":["/Users/grahamsquires/sei/projects/project3/project3/src/TitleResults.js"],"names":["React","useRef","useState","useContext","useEffect","BooksContext","ArticlesContext","TitleResults","booksContext","articlesContext","title_search","getBooksByTitle","getBooksByAuthor","author_search","getResearchArticles","newsArticles","getNewsArticles","researchArticles","map","item","console","log","best_book","title","author","name","image_url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,YAAY,GAAGL,UAAU,CAACE,YAAD,CAA/B;AACF,QAAMI,eAAe,GAAGN,UAAU,CAACG,eAAD,CAAlC;AACA,QAAM;AACJI,IAAAA,YADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA;AAJI,MAKFL,YALJ;AAMA,QAAM;AACJM,IAAAA,mBADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKFR,eALJ;AAMA,sBAEE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,YAAY,GACXA,YAAY,CAACQ,GAAb,CAAkBC,IAAD,IAAU;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAjB;AACA;AAAA;AACE;AACA;AAAA,iCACE;AAAA,kCACUH,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,KAD5B,cAEWJ,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,IAFvC,eAGE;AAAK,cAAA,GAAG,EAAEN,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBI;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAUD,KAZD,CADW,gBAeX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAuBD,CAtCM;;GAAMnB,Y;;KAAAA,Y;AAwCb,eAAeA,YAAf","sourcesContent":["import React, { useRef, useState, useContext, useEffect } from \"react\";\nimport BooksContext from \"./context/Books/BooksContext\";\nimport ArticlesContext from \"./context/Articles/ArticlesContext\";\n\n\nexport const TitleResults = () => {\n    const booksContext = useContext(BooksContext);\n  const articlesContext = useContext(ArticlesContext);\n  const {\n    title_search,\n    getBooksByTitle,\n    getBooksByAuthor,\n    author_search,\n  } = booksContext;\n  const {\n    getResearchArticles,\n    newsArticles,\n    getNewsArticles,\n    researchArticles,\n  } = articlesContext;\n  return (\n    \n    <div>\n    <p>Search Page</p>\n    {title_search ? (\n      title_search.map((item) => {\n        console.log(item.best_book);\n        return (\n          //TODO: Should we default to one radio button checked or make an error for if user runs search without a radio button checked?\n          <div>\n            <p>\n              Title: {item.best_book[0].title}\n              Author: {item.best_book[0].author[0].name}\n              <img src={item.best_book[0].image_url} />\n            </p>\n          </div>\n        );\n      })\n    ) : (\n      <p>No Books</p>\n    )}\n  </div>\n  );\n};\n\nexport default TitleResults;"]},"metadata":{},"sourceType":"module"}